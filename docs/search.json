[
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Exploration Dump:",
    "crumbs": [
      "References"
    ]
  },
  {
    "objectID": "references.html#exploration-dump",
    "href": "references.html#exploration-dump",
    "title": "References",
    "section": "",
    "text": "NA Combination Table- True is NA, False is Not\n\n\n\n\n\nGeodecoder package to fill NA using Address\n\n\n\n\n\n\nImage of PPP Loan Application",
    "crumbs": [
      "References"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "2  Introduction",
    "section": "",
    "text": "In the aftermath of COVID, businesses in need of assistance applied for “Paycheck Protection Program” Loans (PPP Loans) which offered financial assistance for the sake of keeping the economy afloat during the health crisis. The loans would serve to keep businesses open, current employees paid, and additionally help finance hiring new employees to fill positions. PPP loans were intended to be forgiven (if the business met the SBA defined criteria).\nAs the PPP program launched and the first rounds of payments were released, the internet boomed with people boasting about having received payment. There were rumors that businesses applied for PPP loans with the intention of receiving forgiveness by creating job posts that would dispel applicants. Scammers took to the internet to find people interested in receiving a loan contingent of a percentage of the approval.\n\nThe Small Business Administration, with assistance of The Office of Inspector General, released a report in 2023 informing the public, the SBA had disbursed a total of $200 billion to fraudulent claims. While the report was exclusively about blatant falsification of details (false EIN, false addresses, etc). The SBA released a public list of all companies that applied and received PPP loan funds in 2020. Updated regularly– with its last update being on October 24th 2024.\nWhile the dataset is quite large, it could prove impossible to truly say whether there is more fraud than the report outlined– even if the whispers of the internet could be true. Yet, in the spirit of examining the businesses that submitted claims, my exploratory analysis will seek to answer, what evidence, if any, does the data provide regarding the risk of fraud in PPP/PPS and SBA loans?",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "datawrangling.html",
    "href": "datawrangling.html",
    "title": "3  Data Wrangling",
    "section": "",
    "text": "3.0.0.1 Preparing the Data\nWe’ll need to use several libraries to perform various cleaning and wrangling functions.\nInitially, I loaded the data onto RStudio. Each file contained 900,000 observations and 53 columns/variables. To make the process more manageable, I used reduce() from the purrr package, to condense the files into 4. Where each file would undergo the same basic cleaning process.\nWe’ll continue the wrangling using the sparklyr package for the sake of my aged computer, at least until the data is more refined and manageable.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Data Wrangling</span>"
    ]
  },
  {
    "objectID": "datawrangling.html#footnotes",
    "href": "datawrangling.html#footnotes",
    "title": "3  Data Wrangling",
    "section": "",
    "text": "IRS Classification of Non Profit Organizations:\nhttps://fascpaconsultants.com/irs-classification-nonprofit-organizations/↩︎",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Data Wrangling</span>"
    ]
  },
  {
    "objectID": "thedictionary.html",
    "href": "thedictionary.html",
    "title": "4  The Dictionary",
    "section": "",
    "text": "Data Fields: Definitions & Descriptions\nBorrower\n\n\n\nField Name\nDescription\n\n\n\n\nBorrowerName\nBorrower Name\n\n\nBorrowerAddress\nBorrower Street Address\n\n\nBorrowerCity\nBorrower City\n\n\nBorrowerState\nBorrower State\n\n\nBorrowerZip\nBorrower Zip Code\n\n\nFranchiseName\nFranchise Name\n\n\nRace\nBorrower Race Description\n\n\nEthnicity\nBorrower Ethnicity Description\n\n\nGender\nGender Indicator\n\n\nVeteran\nVeteran Indicator\n\n\n\nBusiness Details\n\n\n\n\n\n\n\nField Name\nDescription\n\n\n\n\nBu sinessAgeDescription\nBusiness Age Description\n\n\nProjectCity\nProject City\n\n\nProjectCountyName\nProject County Name\n\n\nProjectState\nProject State\n\n\nProjectZip\nProject Zip Code\n\n\nCD\nProject Congressional District\n\n\nJobsReported\nNumber of Employees\n\n\nNAICSCode\nNAICS 6 digit code: Used to classify business\ninto specific industries\n\n\nBusinessType\nBusiness Type Description\n\n\nNonProfit\n‘Yes’ if Business Type = Non-Profit Organization or Non-Profit Childcare Center or 501(c) Non Profit\n\n\n\nLoan Details\n\n\n\n\n\n\n\nField Name\nDescription\n\n\n\n\nLoanNumber\nLoan Number (unique identifier)\n\n\nDateApproved\nLoan Funded Date\n\n\nSBAOfficeCode\nSBA Origination Office Code\n\n\nProcessingMethod\nLoan Delivery Method (PPP for first draw; PPS for second draw)\n\n\nLoanStatusDate\nLoan Status Date\n- Loan Status Date is blank when the loan is disbursed but not Paid In Full or Charged Off\n\n\nLoanStatus\nLoan Status Description\nCharge off status is used when borrower is 60 Days past due. The Lender is allowed to charge off\nPaid in full is used when SBA paid the lender in full\n- Loan Status is replaced by ‘Exemption 4’ when the loan is disbursed but not Paid in Full or Charged Off\n\n\nTerm\nLoan Maturity in Months\n\n\nSBAGuarantyPercentage\nSBA Guaranty Percentage\n\n\nInitialApprovalAmount\nLoan Approval Amount(at origination)\n\n\nCurrentApprovalAmount\nLoan Approval Amount (current)\n\n\nUndisbursedAmount\nUndisbursed Amount\n\n\nForgivenessAmount\nForgiveness Amount\n\n\nForgivenessDate\nForgiveness Paid Date\n\n\n\nProceed\n\n\n\n\n\n\n\nField Name\nDescription\n\n\n\n\nUTILITIES_PROCEED\nNote: Proceed data is lender reported at origination.\nOn the PPP application the proceeds fields were check boxes.\n\n\nPAYROLL_PROCEED\nNote: Proceed data is lender reported at origination.\nOn the PPP application the proceeds fields were check boxes.\n\n\nM OR TGAGE_INTEREST_PROCEED\nNote: Proceed data is lender reported at origination.\nOn the PPP application the proceeds fields were check boxes.\n\n\nRENT_PROCEED\nNote: Proceed data is lender reported at origination.\nOn the PPP application the proceeds fields were check boxes.\n\n\nREFINANCE_EIDL_PROCEED\nNote: Proceed data is lender reported at origination.\nOn the PPP application the proceeds fields were check boxes.\n\n\nHEALTH_CARE_PROCEED\nNote: Proceed data is lender reported at origination.\nOn the PPP application the proceeds fields were check boxes.\n\n\nDEBT_INTEREST_PROCEED\nNote: Proceed data is lender reported at origination.\nOn the PPP application the proceeds fields were check boxes.\n\n\n\nServicing Lender\n\n\n\n\n\n\n\nField Name\nDescription\n\n\n\n\nS ervi cingLenderLocationID\nLender Location ID (unique identifier)\n\n\nServicingLenderName\nServicing Lender Name\n\n\nSe rvicingLenderAddress\nServicing Lender Street Address\n\n\nServicingLenderCity\nServicing Lender City\n\n\nServicingLenderState\nServicing Lender State\n\n\nServicingLenderZip\nServicing Lender Zip Code\n\n\nOri gina tingLenderLocationID\nOriginating Lender ID (unique identifier)\n\n\nOriginatingLender\nOriginating Lender Name\n\n\nO riginatingLenderCity\nOriginating Lender City\n\n\nOr iginatingLenderState\nOriginating Lender State\n\n\n\nIndicators\n\n\n\n\n\n\n\nField Name\nDescription\n\n\n\n\nRuralUrbanIndicator\nRural or Urban Indicator (R/U)\n\n\nHubzoneIndicator\nHubzone Indicator (Y/N)\nBusiness in under served area that qualifying for the HubZone Program\n\n\nLMIIndicator\nLMI Indicator (Y/N)\nLow to Moderate Income, range determined annually",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>The Dictionary</span>"
    ]
  },
  {
    "objectID": "analysis.html",
    "href": "analysis.html",
    "title": "5  Analysis",
    "section": "",
    "text": "── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nAttaching package: 'sparklyr'\n\n\nThe following object is masked from 'package:purrr':\n\n    invoke\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe data is unfortunately too big to use on my system, even with Sparklyr. To reiterate, our investigation seeks evidence, if any, that the data provides regarding the risk of fraud in PPP/PPS and SBA loans. So, we’ll have to take a sample.\n\n\n5.0.0.1 The Hypothesis:\n\nNull Hypothesis:\n“The proportion of missing values has no significant effect on the amount forgiven.”\nAlternative Hypothesis: review\n“The proportion of missing values has a significant effect on the amount forgiven.”\n\n\nWe’ll take a sample and conduct a hypothesis test to find if the proportion of NA values is or is not significant.\n\nhalf_sample &lt;- half %&gt;%\n  sdf_sample(fraction = 0.5, seed = 28)\n\n\nna_flag &lt;- half_sample %&gt;%\n  sdf_repartition(1) %&gt;% \n  spark_write_csv(\"na_flag.csv\", row.names= FALSE)\n\nWell bring 50% of the df half into standard R to use the Infer package. I’ve written it as a csv to load it locally as spark continues to crash in collecting.\n\nna_f &lt;- read_csv(\"na_flag.csv\")\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 2701640 Columns: 20\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (13): ProcessingMethod, BorrowerName, BorrowerAddress, BorrowerCity, Bor...\ndbl  (6): LoanNumber, CurrentApprovalAmount, JobsReported, ForgivenessAmount...\nlgl  (1): has_na\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nna_f &lt;- na_f %&gt;% select(-has_na)\n\nWell add a column to return Yes if any column in the row is NA. And the proportion of missing column data per row.\n\nna_f &lt;- na_f %&gt;%\n  mutate(has_na = if_else(rowSums(is.na(across(everything()))) &gt; 0, \"Yes\", \"No\"))\n\nna_f &lt;- na_f %&gt;%\n  mutate(na_row_prop = rowSums(is.na(.)) / ncol(.))\nsummary(na_f$na_row_prop)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n0.000000 0.000000 0.000000 0.005165 0.000000 0.350000 \n\n\nWe’ll change the responses to Yes and No and then order them as No and Yes on the obs diff calculation. Where no means, “No, the observation row had no NA” and yes means “Yes, the observation row had NA”.\n\nna_f %&gt;%\n  summarise(\n    total = n(),\n    missing_count = sum(is.na(ForgivenessAmount)),\n    prop_missing= missing_count/total)\n\n# A tibble: 1 × 3\n    total missing_count prop_missing\n    &lt;int&gt;         &lt;int&gt;        &lt;dbl&gt;\n1 2701640        256681       0.0950\n\n\nFor our test, well allow the NA values in ForgivenessAmount to be dropped because we are looking to see claims that received forgiveness despite not filling the form completely. That is 9% of our data, which shouldn’t be\n\nna_testing&lt;- na_f %&gt;% \n  select(ForgivenessAmount, has_na)\n\nI’ve narrowed down the df further as my tests are far too large still.\n\n\n\n\n\n\n\n5.0.0.2 Obs Differences\n\nobs_diff &lt;- na_testing %&gt;%\n  specify(ForgivenessAmount ~ has_na) %&gt;%\n  calculate(stat = \"diff in means\", order = c(\"No\", \"Yes\")) %&gt;% \n  print()\n\nWarning: Removed 256681 rows containing missing values.\n\n\nResponse: ForgivenessAmount (numeric)\nExplanatory: has_na (factor)\n# A tibble: 1 × 1\n   stat\n  &lt;dbl&gt;\n1 7677.\n\n\nLowering the reps. . .\n\nnull_dist &lt;- na_testing %&gt;%\n  drop_na(ForgivenessAmount) %&gt;% \n  specify(ForgivenessAmount ~ has_na) %&gt;%\n  hypothesize(null = \"independence\") %&gt;%\n  generate(reps = 200, type = \"permute\") %&gt;%\n  calculate(stat = \"diff in means\", order = c(\"No\", \"Yes\"))\n\n\n\n5.0.0.3 Null Distribution:\n\nggplot(null_dist, aes(x = stat)) +\n  geom_histogram()+\n  theme_classic()+\n  xlab(\"Null Distribution\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\n\n5.0.0.4 P-Value:\n\nnull_dist %&gt;%\n  get_p_value(obs_stat = obs_diff, direction = \"two_sided\")\n\n# A tibble: 1 × 1\n  p_value\n    &lt;dbl&gt;\n1       0\n\n\n\n\n\n\n\n\n\n5.0.0.5 Confidence Interval:\nFinally, we’ll examine the confidence interval\n\nci_forgiveness&lt;- na_testing %&gt;%\n  drop_na(ForgivenessAmount, has_na) %&gt;%\n  specify(ForgivenessAmount ~ has_na) %&gt;%\n  generate(reps = 200, type = \"bootstrap\") %&gt;%\n  calculate(stat = \"diff in means\") %&gt;%\n  get_ci(level = 0.95) %&gt;%\n  print()\n\n# A tibble: 1 × 2\n  lower_ci upper_ci\n     &lt;dbl&gt;    &lt;dbl&gt;\n1    7373.    8039.\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe difference is statistically significant, as indicated by a p-value of 0 (or as close to zero as it can get) and a 95% confidence interval from 7380.743 to 8022.796. It does not include zero suggesting a significant difference.\n\n\n\nna_f %&gt;% \n  ggplot(aes(ForgivenessAmount, fill= has_na)) +\n  geom_histogram(binwidth = 5000) +\n  theme_minimal() +\n  labs(title = \"Average Forgiveness Amount by NA Values in Claim\",\n       x = \"Coun Contains NA\",\n       y = \"Loan Forgiveness Amount ($)\",\n       fill = \"Forgiveness Amount\")+\n  scale_x_continuous()\n\nWarning: Removed 256681 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\n\n\n\n5.0.1 Conclusion\nThe data suggests a significant difference in loan amount forgiveness if the application contains NA values which is great to hear. However, the data analysis is not as comprehensive as it should be. Computing limitations scraped a small percentage of the true data. Yet, it does suggest thoroughly completing a PPP loan forgiveness application at the time made a significant difference in how much if the loan would be taken care of.\nThe fact remains that $200 Billion dollars were freely given to fraudulent claims according to the administrations. The information at hand could also suggest that filling the application in a specific way could have led to immediate approval. As you can see below, the forgiveness loan application graded the responses and if the results made the threshold, it allowed for submission of loan forgiveness applications without needing to submit any documentation. Of course this another hypothesis that would need to be tested!",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Analysis</span>"
    ]
  }
]